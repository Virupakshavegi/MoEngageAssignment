{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\virupaksha\\\\Downloads\\\\MoEngageAssignment\\\\frontend\\\\src\\\\pages\\\\Lists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useListsContext } from \"../hooks/useListContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\"; // Import auth context\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"./Card\"; // Import the Card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\nconst ListContainer = styled.div`\n  background: #fff;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-radius: 8px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n`;\n_c = ListContainer;\nconst ListTitle = styled.h2`\n  color: #1aac83;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\nconst CreatedAt = styled.p`\n  font-size: 14px;\n  color: #555;\n  margin-bottom: 15px;\n`;\nconst ImageGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n_c2 = ImageGrid;\nconst ActionButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\nconst Button = styled.button`\n  background-color: ${props => props.delete ? \"#e7195a\" : \"#007bff\"};\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: ${props => props.delete ? \"#c4164a\" : \"#0056b3\"};\n  }\n`;\nconst Lists = () => {\n  _s();\n  const {\n    lists,\n    dispatch\n  } = useListsContext();\n  const {\n    user\n  } = useAuthContext(); // Get user from auth context\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchLists = async () => {\n      if (!user) return; // Ensure user is logged in\n\n      const response = await fetch(\"/api/lists\", {\n        headers: {\n          Authorization: `Bearer ${user.token}` // Include token\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: \"SET_LISTS\",\n          payload: data\n        });\n      }\n    };\n    fetchLists();\n  }, [dispatch, user]);\n  const handleDelete = async id => {\n    if (!user) return;\n    const response = await fetch(`/api/lists/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${user.token}` // Include token\n      }\n    });\n    if (response.ok) {\n      dispatch({\n        type: \"DELETE_LIST\",\n        payload: id\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), lists.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyMessage, {\n      children: \"No saved lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : lists.map(list => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListName, {\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DateText, {\n        children: [\"Created on: \", new Date(list.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n        children: list.codes.map(code => /*#__PURE__*/_jsxDEV(Card, {\n          code: code\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n          onClick: () => navigate(`/lists/${list._id}`),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n          color: \"#dc3545\",\n          hoverColor: \"#b02a37\",\n          onClick: () => handleDelete(list._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, list._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Lists, \"Lolqpy59CDPn2Jfat2K7Vz/bCps=\", false, function () {\n  return [useListsContext, useAuthContext, useNavigate];\n});\n_c3 = Lists;\nexport default Lists;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"ImageGrid\");\n$RefreshReg$(_c3, \"Lists\");","map":{"version":3,"names":["React","useEffect","styled","useListsContext","useAuthContext","useNavigate","Card","jsxDEV","_jsxDEV","Container","div","ListContainer","_c","ListTitle","h2","CreatedAt","p","ImageGrid","_c2","ActionButtons","Button","button","props","delete","Lists","_s","lists","dispatch","user","navigate","fetchLists","response","fetch","headers","Authorization","token","data","json","ok","type","payload","handleDelete","id","method","children","fileName","_jsxFileName","lineNumber","columnNumber","length","EmptyMessage","map","list","ListItem","ListName","name","DateText","Date","createdAt","toLocaleString","codes","code","ButtonContainer","ActionButton","onClick","_id","color","hoverColor","_c3","$RefreshReg$"],"sources":["C:/Users/virupaksha/Downloads/MoEngageAssignment/frontend/src/pages/Lists.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useListsContext } from \"../hooks/useListContext\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\"; // Import auth context\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from \"./Card\"; // Import the Card component\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  background: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n`;\r\n\r\nconst ListTitle = styled.h2`\r\n  color: #1aac83;\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CreatedAt = styled.p`\r\n  font-size: 14px;\r\n  color: #555;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ImageGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 15px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => (props.delete ? \"#e7195a\" : \"#007bff\")};\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.delete ? \"#c4164a\" : \"#0056b3\")};\r\n  }\r\n`;\r\n\r\nconst Lists = () => {\r\n  const { lists, dispatch } = useListsContext();\r\n  const { user } = useAuthContext(); // Get user from auth context\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchLists = async () => {\r\n      if (!user) return; // Ensure user is logged in\r\n\r\n      const response = await fetch(\"/api/lists\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`, // Include token\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        dispatch({ type: \"SET_LISTS\", payload: data });\r\n      }\r\n    };\r\n\r\n    fetchLists();\r\n  }, [dispatch, user]);\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!user) return;\r\n\r\n    const response = await fetch(`/api/lists/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`, // Include token\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      dispatch({ type: \"DELETE_LIST\", payload: id });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListContainer>\r\n      <h2>Saved Lists</h2>\r\n\r\n      {lists.length === 0 ? (\r\n        <EmptyMessage>No saved lists</EmptyMessage>\r\n      ) : (\r\n        lists.map((list) => (\r\n          <ListItem key={list._id}>\r\n            <ListName>{list.name}</ListName>\r\n            <DateText>\r\n              Created on: {new Date(list.createdAt).toLocaleString()}\r\n            </DateText>\r\n\r\n            <ImageGrid>\r\n              {list.codes.map((code) => (\r\n                <Card key={code} code={code} />\r\n              ))}\r\n            </ImageGrid>\r\n\r\n            <ButtonContainer>\r\n              <ActionButton onClick={() => navigate(`/lists/${list._id}`)}>\r\n                Edit\r\n              </ActionButton>\r\n              <ActionButton\r\n                color=\"#dc3545\"\r\n                hoverColor=\"#b02a37\"\r\n                onClick={() => handleDelete(list._id)}\r\n              >\r\n                Delete\r\n              </ActionButton>\r\n            </ButtonContainer>\r\n          </ListItem>\r\n        ))\r\n      )}\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}