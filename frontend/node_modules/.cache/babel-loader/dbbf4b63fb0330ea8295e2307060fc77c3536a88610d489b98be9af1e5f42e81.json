{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\virupaksha\\\\Downloads\\\\MoEngageAssignment\\\\frontend\\\\src\\\\pages\\\\Lists.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Lists = () => {\n  _s();\n  const {\n    lists,\n    dispatch\n  } = useListsContext();\n  const {\n    user\n  } = useAuthContext();\n  const navigate = useNavigate();\n  const [editingListId, setEditingListId] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n\n  // Redirect unauthenticated users\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\"); // Redirect to login page if user is not logged in\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    if (!user) return;\n    const fetchLists = async () => {\n      const response = await fetch(\"/api/lists\", {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: \"SET_LISTS\",\n          payload: data\n        });\n      }\n    };\n    fetchLists();\n  }, [dispatch, user]);\n  if (!user) return null; // Prevents rendering when user is not logged in\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saved Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), lists.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyMessage, {\n      children: \"No saved lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : lists.map(list => /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: editingListId === list._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EditInput, {\n          type: \"text\",\n          value: newName,\n          onChange: e => setNewName(e.target.value),\n          placeholder: \"Enter new list name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleEdit(list._id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditingListId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n          children: list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CreatedAt, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created on:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: new Date(list.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n          children: list.codes.map(code => /*#__PURE__*/_jsxDEV(Card, {\n            code: code\n          }, code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingListId(list._id);\n              setNewName(list.name);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            delete: true,\n            onClick: () => handleDelete(list._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, list._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Lists, \"cY7FWagVrR2HxKLoidGixdhiXuw=\", true, function () {\n  return [useNavigate];\n});\n_c = Lists;\nexport default Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Lists","_s","lists","dispatch","useListsContext","user","useAuthContext","navigate","editingListId","setEditingListId","useState","newName","setNewName","fetchLists","response","fetch","headers","Authorization","token","data","json","ok","type","payload","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","length","EmptyMessage","map","list","ListContainer","_id","EditInput","value","onChange","e","target","placeholder","style","display","gap","Button","onClick","handleEdit","ListTitle","name","CreatedAt","Date","createdAt","toLocaleString","ImageGrid","codes","code","Card","ActionButtons","delete","handleDelete","_c","$RefreshReg$"],"sources":["C:/Users/virupaksha/Downloads/MoEngageAssignment/frontend/src/pages/Lists.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Lists = () => {\r\n  const { lists, dispatch } = useListsContext();\r\n  const { user } = useAuthContext();\r\n  const navigate = useNavigate();\r\n  const [editingListId, setEditingListId] = useState(null);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  // Redirect unauthenticated users\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/login\"); // Redirect to login page if user is not logged in\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n\r\n    const fetchLists = async () => {\r\n      const response = await fetch(\"/api/lists\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        dispatch({ type: \"SET_LISTS\", payload: data });\r\n      }\r\n    };\r\n\r\n    fetchLists();\r\n  }, [dispatch, user]);\r\n\r\n  if (!user) return null; // Prevents rendering when user is not logged in\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Saved Lists</h1>\r\n      {lists.length === 0 ? (\r\n        <EmptyMessage>No saved lists</EmptyMessage>\r\n      ) : (\r\n        lists.map((list) => (\r\n          <ListContainer key={list._id}>\r\n            {editingListId === list._id ? (\r\n              <>\r\n                <EditInput\r\n                  type=\"text\"\r\n                  value={newName}\r\n                  onChange={(e) => setNewName(e.target.value)}\r\n                  placeholder=\"Enter new list name\"\r\n                />\r\n                <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n                  <Button onClick={() => handleEdit(list._id)}>Save</Button>\r\n                  <Button onClick={() => setEditingListId(null)}>Cancel</Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ListTitle>{list.name}</ListTitle>\r\n                <CreatedAt>\r\n                  <strong>Created on:</strong>{\" \"}\r\n                  <strong>{new Date(list.createdAt).toLocaleString()}</strong>\r\n                </CreatedAt>\r\n\r\n                <ImageGrid>\r\n                  {list.codes.map((code) => (\r\n                    <Card key={code} code={code} />\r\n                  ))}\r\n                </ImageGrid>\r\n\r\n                <ActionButtons>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setEditingListId(list._id);\r\n                      setNewName(list.name);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button delete onClick={() => handleDelete(list._id)}>\r\n                    Delete\r\n                  </Button>\r\n                </ActionButtons>\r\n              </>\r\n            )}\r\n          </ListContainer>\r\n        ))\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}